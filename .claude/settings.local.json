{
  "permissions": {
    "allow": [
      "Bash(node:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: 완전한 인증 시스템 및 회원정보 관리 구현\n\n## 주요 기능\n\n### 1. 인증 시스템\n- React Query v5 기반 데이터 페칭 및 캐싱\n- Zustand를 이용한 전역 인증 상태 관리 (localStorage 지속성)\n- 세션 기반 인증 (HTTP-only 쿠키)\n- 로그인/로그아웃/회원가입 완전 구현\n\n### 2. 회원정보 관리\n- 마이페이지: 주문내역, 정보수정, 로그아웃 메뉴\n- 비밀번호 확인 후 정보 수정 가능\n- 회원정보 수정: 이메일, 전화번호, 주소, 비밀번호 변경\n- 비밀번호 변경 시 현재 비밀번호 검증\n- 비밀번호 없이 다른 정보만 수정 가능\n- 회원 탈퇴 기능\n\n### 3. UI/UX 개선\n- 모든 alert/confirm을 깔끔한 모달로 교체\n  - ErrorModal: 에러/경고/정보 메시지 표시\n  - ConfirmModal: 사용자 확인 모달 (탈퇴, 로그아웃)\n  - AuthRequiredModal: 로그인 필요 안내 모달\n- 반투명 배경 및 블러 효과\n- 애니메이션 및 시각적 피드백\n\n### 4. API 구조\n- `/api/auth/register`: 회원가입\n- `/api/auth/login`: 로그인\n- `/api/auth/logout`: 로그아웃\n- `/api/auth/me`: 현재 사용자 조회\n- `/api/auth/update`: 회원정보 수정\n- `/api/auth/verify-password`: 비밀번호 확인\n- `/api/auth/delete-account`: 회원 탈퇴\n\n### 5. 성능 최적화\n- React Query 캐싱 전략 (staleTime, gcTime)\n- 401/403/404 에러는 재시도 안함\n- 조건부 쿼리 실행 (enabled)\n- ErrorBoundary를 통한 에러 처리\n\n### 6. 보안\n- Supabase Service Role Key를 사용한 RLS 우회\n- bcrypt를 이용한 비밀번호 해시\n- HTTP-only 쿠키로 세션 관리\n- 이메일 중복 검증\n\n## 기술 스택\n- React Query (@tanstack/react-query v5.85.5)\n- Zustand v5.0.8 (persist middleware)\n- Supabase (PostgreSQL)\n- bcryptjs\n- Next.js 14 App Router\n- TypeScript\n\n## 파일 구조\n- src/hooks/auth/useAuth.ts: 인증 관련 React Query 훅\n- src/store/authStore.ts: Zustand 상태 관리\n- src/lib/react-query/provider.tsx: React Query 설정\n- src/lib/supabase/server.ts: Supabase Admin 클라이언트\n- src/components/molecules/: 재사용 가능한 모달 컴포넌트\n- src/app/api/auth/: 인증 관련 API 라우트\n- src/app/(shop)/mypage/: 마이페이지 관련 페이지\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "mcp__supabase__list_projects",
      "mcp__supabase__list_tables",
      "mcp__supabase__execute_sql",
      "mcp__executeautomation-playwright-server__playwright_navigate",
      "Bash(npx playwright install chromium)",
      "Bash(npx playwright install)",
      "Bash(npm run dev:*)",
      "Bash(git commit:*)",
      "mcp__supabase__apply_migration",
      "Bash(timeout:*)",
      "Bash(npm install:*)",
      "Bash(playwright install:*)",
      "Bash(npx playwright@1.49.0 install:*)",
      "Bash(npx playwright@1.48.2 install:*)",
      "Bash(claude mcp remove:*)",
      "Bash(claude mcp add:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_handle_dialog",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_take_screenshot",
      "Bash(cat:*)",
      "Bash(git checkout:*)"
    ],
    "deny": [],
    "ask": []
  }
}
